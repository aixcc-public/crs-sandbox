name: CRS Evaluator
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  makefile-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.7.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
          curl https://mise.jdx.dev/install.sh | sh
          echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
          mise install

      - name: Check required files
        run: |
          if [ ! -f "${{ github.workspace }}/cp_config.yaml" ]; then
            echo "Required file not found: cp_config.yaml"
            exit 1
          fi

      - name: Move sandbox/example.env to sandbox/env
        run: mv sandbox/example.env sandbox/env

      - name: Add SSH key
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p /home/runner/.ssh
            ssh-keyscan github.com >> /home/runner/.ssh/known_hosts
            echo "${{ secrets.CRS_EVALUATOR_EXEMPLAR_CLONE_SSH_KEY }}" > /home/runner/.ssh/github_actions
            chmod 600 /home/runner/.ssh/github_actions
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null	
            ssh-add /home/runner/.ssh/github_actions


      - name: Docker Registry Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: gha
          password: ${{ github.token }}

      - name: Test Makefile targets
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          make build
          make up
          make test
          make k8s
          make k8s/clean
          make cps
          make cps/clean
          make clean

      - name: Check additional configurations
        run: |
          # Test to see if custom targets like cloning CP repos work correctly.
          # Simulating the expected environment and command execution
          make cps
          # Ensure cloned directories exist
          if [ ! -d "${{ github.workspace }}/cp_root" ]; then
            echo "CP repos did not clone correctly."
            exit 1
          fi
          make cps/clean  # Cleanup after test

      - name: Show help
        run: make help